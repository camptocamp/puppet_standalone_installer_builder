#!/bin/bash

REQUIRED_PUPPET_VERSION=<%= properties['min_puppet_version'] %>
BINDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
BASEDIR=$(echo ${BINDIR%/*})
PATH=/opt/puppetlabs/bin:$PATH

check_puppet_ver() {
  puppet_bin=$(which puppet)

  if [ ! -z $puppet_bin ]; then
    installed_puppet_version=$(puppet --version)
  else
    installed_puppet_version=0
  fi
  
  if [ $(echo -e "$installed_puppet_version\n$REQUIRED_PUPPET_VERSION" | sort -V | head -n1) != "$REQUIRED_PUPPET_VERSION" ]; then
    return 1 # must be installed / upgraded
  else
    return 0 # version is ok
  fi
}

install_puppet() {
  if [ -f /etc/debian_version ]; then
    apt-get update
    apt-get install -y sudo lsb-release
    DIST=$(lsb_release -cs)
    cat > /etc/apt/sources.list.d/puppet.list << EOF
# file created by the Camptocamp standalone installer
deb [trusted=yes] file:${BASEDIR}/packages/apt ${DIST} puppetlabs
EOF
    apt-get update
    apt-get install -y puppet-agent
  else
    cat > /etc/yum.repos.d/puppet.repo << EOF
# file created by the Camptocamp standalone installer
[puppetlabs]
baseurl=file:////${BASEDIR}/packages/yum/RPMS/puppetlabs
gpgcheck=0
enabled=1
EOF

    yum install -y sudo
    yum install -y puppet-agent
  fi
}

cat > ${BASEDIR}/hiera.yaml << EOF
---
:backends: yaml
:yaml:
  :datadir: ${BASEDIR}/hiera
:hierarchy: server
:logger: console
EOF

if [ -z "$1" ]; then
  echo "Please pass a puppet recipe (.pp file) as argument"
  exit 1
fi

if ! check_puppet_ver; then
  echo "Puppet is not installed or too old. Installing..."
  install_puppet

  if ! check_puppet_ver; then
    echo "Something went wrong during the installation! Please fix manually."
    exit 2
  fi
fi

echo "Running Puppet..."
export FACTER_puppet_installer_basedir=$BASEDIR
puppet apply --modulepath $BASEDIR/modules $@

